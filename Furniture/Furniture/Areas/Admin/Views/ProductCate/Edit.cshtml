@model Models.EF.ProductCategory

@{
    ViewBag.Title = "Danh muc Chi tiet";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var cateDetail = ViewBag.cateDetail as Models.EF.CategoryDetail;
    var listCategory = ViewBag.listCategory as List<Models.EF.Category>;
    var listCateDetail = ViewBag.listCateDetail as List<Models.EF.CategoryDetail>;
}

@section header{
    Cap nhat danh muc chi tiet
}
@section jsFooter{
    <script src="~/Assets/Admin/js/productController.js"></script>
}
<br /><br />
<div class="card card-primary" style="width:600px;margin-left:200px;">
    <div class="card-header">
        <h3 class="card-title">Nhap thong tin danh muc</h3>
    </div>
    @using (Html.BeginForm("Edit", "ProductCate", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal card-body">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label " })
                <div>
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MetaTitle, htmlAttributes: new { @class = "control-label " })
                <div>
                    @Html.EditorFor(model => model.MetaTitle, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MetaTitle, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ParentID, htmlAttributes: new { @class = "control-label " })<br />
                <div style="float:left; margin-right:5px;">
                    <select class="cbbCategory">
                        <option value="-1">Select Category</option>
                        @foreach (var i in listCategory)
                        {
                            <option value="@i.ID" @(i.ID == cateDetail.CategoryID ? "selected='seleted'" : "")>@i.Name</option>
                        }
                    </select>
                </div>
                <div>
                    <select class="cbbCateDetail" name="ParentID">
                        <option value="-1">Select Category Detail</option>
                        @foreach (var i in listCateDetail)
                        {
                            <option value="@i.ID" @(i.ID == cateDetail.ID ? "selected='seleted'" : "")>@i.Name</option>
                        }
                    </select>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DisplayOrder, htmlAttributes: new { @class = "control-label " })
                <div>
                    @Html.EditorFor(model => model.DisplayOrder, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DisplayOrder, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label " })
                <div>
                    @Html.CheckBoxFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ShowOnHome, htmlAttributes: new { @class = "control-label " })
                <div>
                    @Html.EditorFor(model => model.ShowOnHome, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ShowOnHome, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="card-footer">
                <button type="submit" class="btn btn-primary">Cap nhat</button>
            </div>
        </div>
    }
</div>
